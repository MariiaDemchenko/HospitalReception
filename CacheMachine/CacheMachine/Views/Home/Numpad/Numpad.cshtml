@model string
@using CacheMachine.Common
@Html.Partial("Numpad/NumDisplay", Model)
@Html.Partial("Numpad/NumKeyboard")

<script>
    $(".btn-num").click(function () {
        event.preventDefault();
        var num = $(this).attr('num');
        if (checkUpdateInput()) {
            updateInput(num);
        }
    });

    $("#inputField").keydown(function (e) {
        var keyCode = e.keyCode;
        if (checkUpdateInput()) {
            if (keyCode >= @Constants.KeyCode0 && keyCode <= @Constants.KeyCode9 ||
                keyCode >= @Constants.KeyCode0NumPad && keyCode <= @Constants.KeyCode9NumPad) {
                updateInput('');
                return true;
            }
        }
        return false;
    });

    function checkUpdateInput() {
        var inputMaskLength = @Model.Length;
        return inputMaskLength === 0 || $('#inputField').val().length < inputMaskLength;
    }

    function appendSymbol(symbol) {
        var inputField = $("#inputField");
        inputField.val(inputField.val() + symbol);
    }

    function autoCompleteCardNum(currentValue) {
        if (currentValue.match(/^\d{4}$/) !== null ||
            currentValue.match(/^\d{4}\-\d{4}$/) !== null ||
            currentValue.match(/^\d{4}(-\d{4}){2}$/) !== null) {
            appendSymbol('-');
        }
    }

    function updateInput(symbol) {
        appendSymbol(symbol);

        var inputField = $("#inputField");

        $('.card-num').on("valueChanged", function () {
                autoCompleteCardNum(inputField.val());
            }
        );

        inputField.trigger("valueChanged");
    }

    $("#btnClear").click(function () {
        var inputField = $('#inputField');
        inputField.val("");
        inputField.focus();
        event.preventDefault();
    });
</script>